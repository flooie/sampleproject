#To explain this convoluted action.  We are trying to allow PR merges
# into master/main & pushes directly into master/main with a version tag
# (e.g. "v0.0.0") to automatically build and push to pypi.  This is more
# complicated than one would immediately presume because PRs mergers
# are technically pushes, tagging a commit and than PRing it removes the tag
# from the context you can immediately pull up and changes after the tag
# during a review, for example, would move the tag down the commit list.

# What we do is this.  If a Push to master/main is tagged with our tag,
# we validate the format and send to PyPI.

# If a PR is closed and merged, we have to query the tags information and check
# if the most recent tagged branch is inside all the commits in our current PR.
# If the PR contains a properly formatted tag, we send to PyPI.  Additionally,
# we check that this only happens on the default branch.

name: PyPI

on:
  push:
    branches:
      - main

jobs:
  test-I:
    name: 'PyPI'
    runs-on: ubuntu-latest
    steps:
      - name: Check Tags
        shell: python
        id: tags
        continue-on-error: true
        env:
          CONTEXT: ${{ toJson(github) }}
          FOO: 'foo'
        run: |
          import os, json, urllib, subprocess, re
          context = json.loads(os.environ['CONTEXT'])
          print(context)
          my_vars = {'FOO': 'bar'}
          os.environ.update(my_vars)
          print(os.environ['FOO'])
      - name: IFNOW
        id: ifwhen
        env:
          FOO: ${{ FOO }}

        run: |
          import os
          print(os.environ('FOO'))
        shell: python