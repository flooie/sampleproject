#To explain this convoluted action.  We are trying to allow PR merges
# into master/main & pushes directly into master/main with a version tag
# (e.g. "v0.0.0") to automatically build and push to pypi.  This is more
# complicated than one would immediately presume because PRs mergers
# are technically pushes, tagging a commit and than PRing it removes the tag
# from the context you can immediately pull up and changes after the tag
# during a review, for example, would move the tag down the commit list.

# What we do is this.  If a Push to master/main is tagged with our tag,
# we validate the format and send to PyPI.

# If a PR is closed and merged, we have to query the tags information and check
# if the most recent tagged branch is inside all the commits in our current PR.
# If the PR contains a properly formatted tag, we send to PyPI.  Additionally,
# we check that this only happens on the default branch.

name: PyPI

on:
  push:
    branches:
      - main

jobs:
  test-I:
    name: 'PyPI'
    runs-on: ubuntu-latest
    steps:
      - name: Check Tags
        shell: python
        id: tags
        continue-on-error: true
        env:
          CONTEXT: ${{ toJson(github) }}
        run: |
          import os, json, urllib, subprocess, re
          context = json.loads(os.environ['CONTEXT'])
          tag_url = context['event']['repository']['tags_url']
          tags = json.loads(urllib.urlopen(tag_url).read())

          tagged_sha1 = tags[0]['commit']['sha']
          tag_name = tags[0]['name']

          default = context['event']['repository']['default_branch']
          branch = context['ref']
          pattern = re.compile("^v\d{1,2}\.\d{1,2}\.\d{1,2}")

          if tagged_sha1 not in [x['id'] for x in context['event']['commits']]:
            raise("Not tagged")
          if pattern.match(tag_name) is None:
            raise("Tag doesnt match")

      - name: Check on failures
        if: failure()
        run: echo "ddd"

      - name: Check not on failures
        if: success()
        run: echo "adfasdfasdfasdfadsf"

#
#      - name: PyPI release!
#        if: steps.vars.outputs.continue == 'True'
#        uses: casperdcl/deploy-pypi@v1
#        with:
#          password: ${{ secrets.pypi_token }}
#          build: true
#
#      - name: Not a PyPI release.
#        if: steps.vars.outputs.continue == 'False'
#        run: |
#          echo "Not a PyPI release"


#jobs:
#  test-I:
#    name: 'PyPI'
#    runs-on: ubuntu-latest
#    steps:
#      - name: Check Tags
#        shell: python
#        id: hello
#        continue-on-error: true
#        env:
#          CONTEXT: ${{ toJson(github) }}
#        run: |
#          import os, json, urllib, subprocess, re
#          raise("error")
#
#      - name: Not a PyPI release.
#        if: failure()
#        run: |
#          echo "Not a PyPI release"
#
#      - name: Check on failures
#        if: job.steps.hello.status == failure()
#        run: echo "adfasdfasdfasdfadsf"
